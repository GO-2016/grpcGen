// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gocnn {

namespace {

const ::google::protobuf::Descriptor* RequestV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestV2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestV2_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseV2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseV2_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  RequestV1_descriptor_ = file->message_type(0);
  static const int RequestV1_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, board_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib3_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib3_plus_),
  };
  RequestV1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestV1_descriptor_,
      RequestV1::default_instance_,
      RequestV1_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestV1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, _is_default_instance_));
  ResponseV1_descriptor_ = file->message_type(1);
  static const int ResponseV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, possibility_),
  };
  ResponseV1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseV1_descriptor_,
      ResponseV1::default_instance_,
      ResponseV1_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseV1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, _is_default_instance_));
  RequestV2_descriptor_ = file->message_type(2);
  static const int RequestV2_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, board_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_group_lib3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_group_lib4_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_group_lib3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_group_lib4_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, all_ones_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_true_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_fake_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, our_semi_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_true_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_fake_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, oppo_semi_eye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, all_zeros_),
  };
  RequestV2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestV2_descriptor_,
      RequestV2::default_instance_,
      RequestV2_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestV2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV2, _is_default_instance_));
  ResponseV2_descriptor_ = file->message_type(3);
  static const int ResponseV2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV2, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV2, possibility_),
  };
  ResponseV2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseV2_descriptor_,
      ResponseV2::default_instance_,
      ResponseV2_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseV2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV2, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestV1_descriptor_, &RequestV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseV1_descriptor_, &ResponseV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestV2_descriptor_, &RequestV2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseV2_descriptor_, &ResponseV2::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  delete RequestV1::default_instance_;
  delete RequestV1_reflection_;
  delete ResponseV1::default_instance_;
  delete ResponseV1_reflection_;
  delete RequestV2::default_instance_;
  delete RequestV2_reflection_;
  delete ResponseV2::default_instance_;
  delete ResponseV2_reflection_;
}

void protobuf_AddDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\005gocnn\"\321\001\n\tRequestV1\022\022\n\n"
    "board_size\030\001 \001(\005\022\023\n\013board_state\030\002 \003(\010\022\026\n"
    "\016our_group_lib1\030\003 \003(\010\022\026\n\016our_group_lib2\030"
    "\004 \003(\010\022\033\n\023our_group_lib3_plus\030\005 \003(\010\022\027\n\017op"
    "po_group_lib1\030\006 \003(\010\022\027\n\017oppo_group_lib2\030\007"
    " \003(\010\022\034\n\024oppo_group_lib3_plus\030\010 \003(\010\"5\n\nRe"
    "sponseV1\022\022\n\nboard_size\030\001 \001(\005\022\023\n\013possibil"
    "ity\030\002 \003(\002\"\256\003\n\tRequestV2\022\022\n\nboard_size\030\001 "
    "\001(\005\022\023\n\013board_state\030\002 \003(\010\022\026\n\016our_group_li"
    "b1\030\003 \003(\010\022\026\n\016our_group_lib2\030\004 \003(\010\022\026\n\016our_"
    "group_lib3\030\005 \003(\010\022\033\n\023our_group_lib4_plus\030"
    "\006 \003(\010\022\027\n\017oppo_group_lib1\030\007 \003(\010\022\027\n\017oppo_g"
    "roup_lib2\030\010 \003(\010\022\027\n\017oppo_group_lib3\030\t \003(\010"
    "\022\034\n\024oppo_group_lib4_plus\030\n \003(\010\022\020\n\010all_on"
    "es\030\013 \003(\010\022\024\n\014our_true_eye\030\014 \003(\010\022\024\n\014our_fa"
    "ke_eye\030\r \003(\010\022\024\n\014our_semi_eye\030\016 \003(\010\022\025\n\rop"
    "po_true_eye\030\017 \003(\010\022\025\n\roppo_fake_eye\030\020 \003(\010"
    "\022\025\n\roppo_semi_eye\030\021 \003(\010\022\021\n\tall_zeros\030\022 \003"
    "(\010\"5\n\nResponseV2\022\022\n\nboard_size\030\001 \001(\005\022\023\n\013"
    "possibility\030\002 \003(\002b\006proto3", 785);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  RequestV1::default_instance_ = new RequestV1();
  ResponseV1::default_instance_ = new ResponseV1();
  RequestV2::default_instance_ = new RequestV2();
  ResponseV2::default_instance_ = new ResponseV2();
  RequestV1::default_instance_->InitAsDefaultInstance();
  ResponseV1::default_instance_->InitAsDefaultInstance();
  RequestV2::default_instance_->InitAsDefaultInstance();
  ResponseV2::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestV1::kBoardSizeFieldNumber;
const int RequestV1::kBoardStateFieldNumber;
const int RequestV1::kOurGroupLib1FieldNumber;
const int RequestV1::kOurGroupLib2FieldNumber;
const int RequestV1::kOurGroupLib3PlusFieldNumber;
const int RequestV1::kOppoGroupLib1FieldNumber;
const int RequestV1::kOppoGroupLib2FieldNumber;
const int RequestV1::kOppoGroupLib3PlusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestV1::RequestV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.RequestV1)
}

void RequestV1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RequestV1::RequestV1(const RequestV1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.RequestV1)
}

void RequestV1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

RequestV1::~RequestV1() {
  // @@protoc_insertion_point(destructor:gocnn.RequestV1)
  SharedDtor();
}

void RequestV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestV1_descriptor_;
}

const RequestV1& RequestV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

RequestV1* RequestV1::default_instance_ = NULL;

RequestV1* RequestV1::New(::google::protobuf::Arena* arena) const {
  RequestV1* n = new RequestV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestV1::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.RequestV1)
  board_size_ = 0;
  board_state_.Clear();
  our_group_lib1_.Clear();
  our_group_lib2_.Clear();
  our_group_lib3_plus_.Clear();
  oppo_group_lib1_.Clear();
  oppo_group_lib2_.Clear();
  oppo_group_lib3_plus_.Clear();
}

bool RequestV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.RequestV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_board_state;
        break;
      }

      // repeated bool board_state = 2;
      case 2: {
        if (tag == 18) {
         parse_board_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_board_state())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18, input, this->mutable_board_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_our_group_lib1;
        break;
      }

      // repeated bool our_group_lib1 = 3;
      case 3: {
        if (tag == 26) {
         parse_our_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib1())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26, input, this->mutable_our_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_our_group_lib2;
        break;
      }

      // repeated bool our_group_lib2 = 4;
      case 4: {
        if (tag == 34) {
         parse_our_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib2())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34, input, this->mutable_our_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_our_group_lib3_plus;
        break;
      }

      // repeated bool our_group_lib3_plus = 5;
      case 5: {
        if (tag == 42) {
         parse_our_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib3_plus())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 42, input, this->mutable_our_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oppo_group_lib1;
        break;
      }

      // repeated bool oppo_group_lib1 = 6;
      case 6: {
        if (tag == 50) {
         parse_oppo_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib1())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50, input, this->mutable_oppo_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_oppo_group_lib2;
        break;
      }

      // repeated bool oppo_group_lib2 = 7;
      case 7: {
        if (tag == 58) {
         parse_oppo_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib2())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 58, input, this->mutable_oppo_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_oppo_group_lib3_plus;
        break;
      }

      // repeated bool oppo_group_lib3_plus = 8;
      case 8: {
        if (tag == 66) {
         parse_oppo_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib3_plus())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 66, input, this->mutable_oppo_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.RequestV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.RequestV1)
  return false;
#undef DO_
}

void RequestV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.RequestV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated bool board_state = 2;
  if (this->board_state_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_board_state_cached_byte_size_);
  }
  for (int i = 0; i < this->board_state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->board_state(i), output);
  }

  // repeated bool our_group_lib1 = 3;
  if (this->our_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib1(i), output);
  }

  // repeated bool our_group_lib2 = 4;
  if (this->our_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib2(i), output);
  }

  // repeated bool our_group_lib3_plus = 5;
  if (this->our_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib3_plus(i), output);
  }

  // repeated bool oppo_group_lib1 = 6;
  if (this->oppo_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib1(i), output);
  }

  // repeated bool oppo_group_lib2 = 7;
  if (this->oppo_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib2(i), output);
  }

  // repeated bool oppo_group_lib3_plus = 8;
  if (this->oppo_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib3_plus(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.RequestV1)
}

::google::protobuf::uint8* RequestV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.RequestV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated bool board_state = 2;
  if (this->board_state_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _board_state_cached_byte_size_, target);
  }
  for (int i = 0; i < this->board_state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->board_state(i), target);
  }

  // repeated bool our_group_lib1 = 3;
  if (this->our_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib1(i), target);
  }

  // repeated bool our_group_lib2 = 4;
  if (this->our_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib2(i), target);
  }

  // repeated bool our_group_lib3_plus = 5;
  if (this->our_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib3_plus(i), target);
  }

  // repeated bool oppo_group_lib1 = 6;
  if (this->oppo_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib1(i), target);
  }

  // repeated bool oppo_group_lib2 = 7;
  if (this->oppo_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib2(i), target);
  }

  // repeated bool oppo_group_lib3_plus = 8;
  if (this->oppo_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib3_plus(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.RequestV1)
  return target;
}

int RequestV1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.RequestV1)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated bool board_state = 2;
  {
    int data_size = 0;
    data_size = 1 * this->board_state_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _board_state_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib1 = 3;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib2 = 4;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib3_plus = 5;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib3_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib3_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib1 = 6;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib2 = 7;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib3_plus = 8;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib3_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib3_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.RequestV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RequestV1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.RequestV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.RequestV1)
    MergeFrom(*source);
  }
}

void RequestV1::MergeFrom(const RequestV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.RequestV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  board_state_.MergeFrom(from.board_state_);
  our_group_lib1_.MergeFrom(from.our_group_lib1_);
  our_group_lib2_.MergeFrom(from.our_group_lib2_);
  our_group_lib3_plus_.MergeFrom(from.our_group_lib3_plus_);
  oppo_group_lib1_.MergeFrom(from.oppo_group_lib1_);
  oppo_group_lib2_.MergeFrom(from.oppo_group_lib2_);
  oppo_group_lib3_plus_.MergeFrom(from.oppo_group_lib3_plus_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void RequestV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.RequestV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestV1::CopyFrom(const RequestV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.RequestV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestV1::IsInitialized() const {

  return true;
}

void RequestV1::Swap(RequestV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestV1::InternalSwap(RequestV1* other) {
  std::swap(board_size_, other->board_size_);
  board_state_.UnsafeArenaSwap(&other->board_state_);
  our_group_lib1_.UnsafeArenaSwap(&other->our_group_lib1_);
  our_group_lib2_.UnsafeArenaSwap(&other->our_group_lib2_);
  our_group_lib3_plus_.UnsafeArenaSwap(&other->our_group_lib3_plus_);
  oppo_group_lib1_.UnsafeArenaSwap(&other->oppo_group_lib1_);
  oppo_group_lib2_.UnsafeArenaSwap(&other->oppo_group_lib2_);
  oppo_group_lib3_plus_.UnsafeArenaSwap(&other->oppo_group_lib3_plus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestV1_descriptor_;
  metadata.reflection = RequestV1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestV1

// optional int32 board_size = 1;
void RequestV1::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 RequestV1::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.board_size)
  return board_size_;
}
 void RequestV1::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.board_size)
}

// repeated bool board_state = 2;
int RequestV1::board_state_size() const {
  return board_state_.size();
}
void RequestV1::clear_board_state() {
  board_state_.Clear();
}
 bool RequestV1::board_state(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.board_state)
  return board_state_.Get(index);
}
 void RequestV1::set_board_state(int index, bool value) {
  board_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.board_state)
}
 void RequestV1::add_board_state(bool value) {
  board_state_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.board_state)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::board_state() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.board_state)
  return board_state_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_board_state() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.board_state)
  return &board_state_;
}

// repeated bool our_group_lib1 = 3;
int RequestV1::our_group_lib1_size() const {
  return our_group_lib1_.size();
}
void RequestV1::clear_our_group_lib1() {
  our_group_lib1_.Clear();
}
 bool RequestV1::our_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib1)
  return our_group_lib1_.Get(index);
}
 void RequestV1::set_our_group_lib1(int index, bool value) {
  our_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib1)
}
 void RequestV1::add_our_group_lib1(bool value) {
  our_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib1)
  return our_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib1)
  return &our_group_lib1_;
}

// repeated bool our_group_lib2 = 4;
int RequestV1::our_group_lib2_size() const {
  return our_group_lib2_.size();
}
void RequestV1::clear_our_group_lib2() {
  our_group_lib2_.Clear();
}
 bool RequestV1::our_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib2)
  return our_group_lib2_.Get(index);
}
 void RequestV1::set_our_group_lib2(int index, bool value) {
  our_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib2)
}
 void RequestV1::add_our_group_lib2(bool value) {
  our_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib2)
  return our_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib2)
  return &our_group_lib2_;
}

// repeated bool our_group_lib3_plus = 5;
int RequestV1::our_group_lib3_plus_size() const {
  return our_group_lib3_plus_.size();
}
void RequestV1::clear_our_group_lib3_plus() {
  our_group_lib3_plus_.Clear();
}
 bool RequestV1::our_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib3_plus)
  return our_group_lib3_plus_.Get(index);
}
 void RequestV1::set_our_group_lib3_plus(int index, bool value) {
  our_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib3_plus)
}
 void RequestV1::add_our_group_lib3_plus(bool value) {
  our_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib3_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib3_plus)
  return our_group_lib3_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib3_plus)
  return &our_group_lib3_plus_;
}

// repeated bool oppo_group_lib1 = 6;
int RequestV1::oppo_group_lib1_size() const {
  return oppo_group_lib1_.size();
}
void RequestV1::clear_oppo_group_lib1() {
  oppo_group_lib1_.Clear();
}
 bool RequestV1::oppo_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib1)
  return oppo_group_lib1_.Get(index);
}
 void RequestV1::set_oppo_group_lib1(int index, bool value) {
  oppo_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib1)
}
 void RequestV1::add_oppo_group_lib1(bool value) {
  oppo_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib1)
  return oppo_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib1)
  return &oppo_group_lib1_;
}

// repeated bool oppo_group_lib2 = 7;
int RequestV1::oppo_group_lib2_size() const {
  return oppo_group_lib2_.size();
}
void RequestV1::clear_oppo_group_lib2() {
  oppo_group_lib2_.Clear();
}
 bool RequestV1::oppo_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib2)
  return oppo_group_lib2_.Get(index);
}
 void RequestV1::set_oppo_group_lib2(int index, bool value) {
  oppo_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib2)
}
 void RequestV1::add_oppo_group_lib2(bool value) {
  oppo_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib2)
  return oppo_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib2)
  return &oppo_group_lib2_;
}

// repeated bool oppo_group_lib3_plus = 8;
int RequestV1::oppo_group_lib3_plus_size() const {
  return oppo_group_lib3_plus_.size();
}
void RequestV1::clear_oppo_group_lib3_plus() {
  oppo_group_lib3_plus_.Clear();
}
 bool RequestV1::oppo_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_.Get(index);
}
 void RequestV1::set_oppo_group_lib3_plus(int index, bool value) {
  oppo_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib3_plus)
}
 void RequestV1::add_oppo_group_lib3_plus(bool value) {
  oppo_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib3_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib3_plus)
  return &oppo_group_lib3_plus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseV1::kBoardSizeFieldNumber;
const int ResponseV1::kPossibilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseV1::ResponseV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.ResponseV1)
}

void ResponseV1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResponseV1::ResponseV1(const ResponseV1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.ResponseV1)
}

void ResponseV1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

ResponseV1::~ResponseV1() {
  // @@protoc_insertion_point(destructor:gocnn.ResponseV1)
  SharedDtor();
}

void ResponseV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseV1_descriptor_;
}

const ResponseV1& ResponseV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

ResponseV1* ResponseV1::default_instance_ = NULL;

ResponseV1* ResponseV1::New(::google::protobuf::Arena* arena) const {
  ResponseV1* n = new ResponseV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseV1::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.ResponseV1)
  board_size_ = 0;
  possibility_.Clear();
}

bool ResponseV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.ResponseV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_possibility;
        break;
      }

      // repeated float possibility = 2;
      case 2: {
        if (tag == 18) {
         parse_possibility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_possibility())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_possibility())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.ResponseV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.ResponseV1)
  return false;
#undef DO_
}

void ResponseV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.ResponseV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_possibility_cached_byte_size_);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->possibility(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.ResponseV1)
}

::google::protobuf::uint8* ResponseV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.ResponseV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _possibility_cached_byte_size_, target);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->possibility(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.ResponseV1)
  return target;
}

int ResponseV1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.ResponseV1)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated float possibility = 2;
  {
    int data_size = 0;
    data_size = 4 * this->possibility_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _possibility_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.ResponseV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseV1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.ResponseV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.ResponseV1)
    MergeFrom(*source);
  }
}

void ResponseV1::MergeFrom(const ResponseV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.ResponseV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  possibility_.MergeFrom(from.possibility_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void ResponseV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.ResponseV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseV1::CopyFrom(const ResponseV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.ResponseV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseV1::IsInitialized() const {

  return true;
}

void ResponseV1::Swap(ResponseV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseV1::InternalSwap(ResponseV1* other) {
  std::swap(board_size_, other->board_size_);
  possibility_.UnsafeArenaSwap(&other->possibility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseV1_descriptor_;
  metadata.reflection = ResponseV1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseV1

// optional int32 board_size = 1;
void ResponseV1::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 ResponseV1::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV1.board_size)
  return board_size_;
}
 void ResponseV1::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.ResponseV1.board_size)
}

// repeated float possibility = 2;
int ResponseV1::possibility_size() const {
  return possibility_.size();
}
void ResponseV1::clear_possibility() {
  possibility_.Clear();
}
 float ResponseV1::possibility(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV1.possibility)
  return possibility_.Get(index);
}
 void ResponseV1::set_possibility(int index, float value) {
  possibility_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.ResponseV1.possibility)
}
 void ResponseV1::add_possibility(float value) {
  possibility_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.ResponseV1.possibility)
}
 const ::google::protobuf::RepeatedField< float >&
ResponseV1::possibility() const {
  // @@protoc_insertion_point(field_list:gocnn.ResponseV1.possibility)
  return possibility_;
}
 ::google::protobuf::RepeatedField< float >*
ResponseV1::mutable_possibility() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.ResponseV1.possibility)
  return &possibility_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestV2::kBoardSizeFieldNumber;
const int RequestV2::kBoardStateFieldNumber;
const int RequestV2::kOurGroupLib1FieldNumber;
const int RequestV2::kOurGroupLib2FieldNumber;
const int RequestV2::kOurGroupLib3FieldNumber;
const int RequestV2::kOurGroupLib4PlusFieldNumber;
const int RequestV2::kOppoGroupLib1FieldNumber;
const int RequestV2::kOppoGroupLib2FieldNumber;
const int RequestV2::kOppoGroupLib3FieldNumber;
const int RequestV2::kOppoGroupLib4PlusFieldNumber;
const int RequestV2::kAllOnesFieldNumber;
const int RequestV2::kOurTrueEyeFieldNumber;
const int RequestV2::kOurFakeEyeFieldNumber;
const int RequestV2::kOurSemiEyeFieldNumber;
const int RequestV2::kOppoTrueEyeFieldNumber;
const int RequestV2::kOppoFakeEyeFieldNumber;
const int RequestV2::kOppoSemiEyeFieldNumber;
const int RequestV2::kAllZerosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestV2::RequestV2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.RequestV2)
}

void RequestV2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RequestV2::RequestV2(const RequestV2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.RequestV2)
}

void RequestV2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

RequestV2::~RequestV2() {
  // @@protoc_insertion_point(destructor:gocnn.RequestV2)
  SharedDtor();
}

void RequestV2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestV2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestV2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestV2_descriptor_;
}

const RequestV2& RequestV2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

RequestV2* RequestV2::default_instance_ = NULL;

RequestV2* RequestV2::New(::google::protobuf::Arena* arena) const {
  RequestV2* n = new RequestV2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestV2::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.RequestV2)
  board_size_ = 0;
  board_state_.Clear();
  our_group_lib1_.Clear();
  our_group_lib2_.Clear();
  our_group_lib3_.Clear();
  our_group_lib4_plus_.Clear();
  oppo_group_lib1_.Clear();
  oppo_group_lib2_.Clear();
  oppo_group_lib3_.Clear();
  oppo_group_lib4_plus_.Clear();
  all_ones_.Clear();
  our_true_eye_.Clear();
  our_fake_eye_.Clear();
  our_semi_eye_.Clear();
  oppo_true_eye_.Clear();
  oppo_fake_eye_.Clear();
  oppo_semi_eye_.Clear();
  all_zeros_.Clear();
}

bool RequestV2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.RequestV2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_board_state;
        break;
      }

      // repeated bool board_state = 2;
      case 2: {
        if (tag == 18) {
         parse_board_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_board_state())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18, input, this->mutable_board_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_our_group_lib1;
        break;
      }

      // repeated bool our_group_lib1 = 3;
      case 3: {
        if (tag == 26) {
         parse_our_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib1())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26, input, this->mutable_our_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_our_group_lib2;
        break;
      }

      // repeated bool our_group_lib2 = 4;
      case 4: {
        if (tag == 34) {
         parse_our_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib2())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34, input, this->mutable_our_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_our_group_lib3;
        break;
      }

      // repeated bool our_group_lib3 = 5;
      case 5: {
        if (tag == 42) {
         parse_our_group_lib3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib3())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 42, input, this->mutable_our_group_lib3())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_our_group_lib4_plus;
        break;
      }

      // repeated bool our_group_lib4_plus = 6;
      case 6: {
        if (tag == 50) {
         parse_our_group_lib4_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib4_plus())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50, input, this->mutable_our_group_lib4_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_oppo_group_lib1;
        break;
      }

      // repeated bool oppo_group_lib1 = 7;
      case 7: {
        if (tag == 58) {
         parse_oppo_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib1())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 58, input, this->mutable_oppo_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_oppo_group_lib2;
        break;
      }

      // repeated bool oppo_group_lib2 = 8;
      case 8: {
        if (tag == 66) {
         parse_oppo_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib2())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 66, input, this->mutable_oppo_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_oppo_group_lib3;
        break;
      }

      // repeated bool oppo_group_lib3 = 9;
      case 9: {
        if (tag == 74) {
         parse_oppo_group_lib3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib3())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 74, input, this->mutable_oppo_group_lib3())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_oppo_group_lib4_plus;
        break;
      }

      // repeated bool oppo_group_lib4_plus = 10;
      case 10: {
        if (tag == 82) {
         parse_oppo_group_lib4_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib4_plus())));
        } else if (tag == 80) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 82, input, this->mutable_oppo_group_lib4_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_all_ones;
        break;
      }

      // repeated bool all_ones = 11;
      case 11: {
        if (tag == 90) {
         parse_all_ones:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_all_ones())));
        } else if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 90, input, this->mutable_all_ones())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_our_true_eye;
        break;
      }

      // repeated bool our_true_eye = 12;
      case 12: {
        if (tag == 98) {
         parse_our_true_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_true_eye())));
        } else if (tag == 96) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 98, input, this->mutable_our_true_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_our_fake_eye;
        break;
      }

      // repeated bool our_fake_eye = 13;
      case 13: {
        if (tag == 106) {
         parse_our_fake_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_fake_eye())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 106, input, this->mutable_our_fake_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_our_semi_eye;
        break;
      }

      // repeated bool our_semi_eye = 14;
      case 14: {
        if (tag == 114) {
         parse_our_semi_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_semi_eye())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 114, input, this->mutable_our_semi_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_oppo_true_eye;
        break;
      }

      // repeated bool oppo_true_eye = 15;
      case 15: {
        if (tag == 122) {
         parse_oppo_true_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_true_eye())));
        } else if (tag == 120) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 122, input, this->mutable_oppo_true_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_oppo_fake_eye;
        break;
      }

      // repeated bool oppo_fake_eye = 16;
      case 16: {
        if (tag == 130) {
         parse_oppo_fake_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_fake_eye())));
        } else if (tag == 128) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 130, input, this->mutable_oppo_fake_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_oppo_semi_eye;
        break;
      }

      // repeated bool oppo_semi_eye = 17;
      case 17: {
        if (tag == 138) {
         parse_oppo_semi_eye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_semi_eye())));
        } else if (tag == 136) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 138, input, this->mutable_oppo_semi_eye())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_all_zeros;
        break;
      }

      // repeated bool all_zeros = 18;
      case 18: {
        if (tag == 146) {
         parse_all_zeros:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_all_zeros())));
        } else if (tag == 144) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 146, input, this->mutable_all_zeros())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.RequestV2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.RequestV2)
  return false;
#undef DO_
}

void RequestV2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.RequestV2)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated bool board_state = 2;
  if (this->board_state_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_board_state_cached_byte_size_);
  }
  for (int i = 0; i < this->board_state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->board_state(i), output);
  }

  // repeated bool our_group_lib1 = 3;
  if (this->our_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib1(i), output);
  }

  // repeated bool our_group_lib2 = 4;
  if (this->our_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib2(i), output);
  }

  // repeated bool our_group_lib3 = 5;
  if (this->our_group_lib3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib3_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib3(i), output);
  }

  // repeated bool our_group_lib4_plus = 6;
  if (this->our_group_lib4_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib4_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib4_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib4_plus(i), output);
  }

  // repeated bool oppo_group_lib1 = 7;
  if (this->oppo_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib1(i), output);
  }

  // repeated bool oppo_group_lib2 = 8;
  if (this->oppo_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib2(i), output);
  }

  // repeated bool oppo_group_lib3 = 9;
  if (this->oppo_group_lib3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib3_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib3(i), output);
  }

  // repeated bool oppo_group_lib4_plus = 10;
  if (this->oppo_group_lib4_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib4_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib4_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib4_plus(i), output);
  }

  // repeated bool all_ones = 11;
  if (this->all_ones_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_all_ones_cached_byte_size_);
  }
  for (int i = 0; i < this->all_ones_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->all_ones(i), output);
  }

  // repeated bool our_true_eye = 12;
  if (this->our_true_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_true_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->our_true_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_true_eye(i), output);
  }

  // repeated bool our_fake_eye = 13;
  if (this->our_fake_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_fake_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->our_fake_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_fake_eye(i), output);
  }

  // repeated bool our_semi_eye = 14;
  if (this->our_semi_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_semi_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->our_semi_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_semi_eye(i), output);
  }

  // repeated bool oppo_true_eye = 15;
  if (this->oppo_true_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_true_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_true_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_true_eye(i), output);
  }

  // repeated bool oppo_fake_eye = 16;
  if (this->oppo_fake_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_fake_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_fake_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_fake_eye(i), output);
  }

  // repeated bool oppo_semi_eye = 17;
  if (this->oppo_semi_eye_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_semi_eye_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_semi_eye_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_semi_eye(i), output);
  }

  // repeated bool all_zeros = 18;
  if (this->all_zeros_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_all_zeros_cached_byte_size_);
  }
  for (int i = 0; i < this->all_zeros_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->all_zeros(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.RequestV2)
}

::google::protobuf::uint8* RequestV2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.RequestV2)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated bool board_state = 2;
  if (this->board_state_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _board_state_cached_byte_size_, target);
  }
  for (int i = 0; i < this->board_state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->board_state(i), target);
  }

  // repeated bool our_group_lib1 = 3;
  if (this->our_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib1(i), target);
  }

  // repeated bool our_group_lib2 = 4;
  if (this->our_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib2(i), target);
  }

  // repeated bool our_group_lib3 = 5;
  if (this->our_group_lib3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib3_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib3(i), target);
  }

  // repeated bool our_group_lib4_plus = 6;
  if (this->our_group_lib4_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib4_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib4_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib4_plus(i), target);
  }

  // repeated bool oppo_group_lib1 = 7;
  if (this->oppo_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib1(i), target);
  }

  // repeated bool oppo_group_lib2 = 8;
  if (this->oppo_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib2(i), target);
  }

  // repeated bool oppo_group_lib3 = 9;
  if (this->oppo_group_lib3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib3_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib3(i), target);
  }

  // repeated bool oppo_group_lib4_plus = 10;
  if (this->oppo_group_lib4_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib4_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib4_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib4_plus(i), target);
  }

  // repeated bool all_ones = 11;
  if (this->all_ones_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _all_ones_cached_byte_size_, target);
  }
  for (int i = 0; i < this->all_ones_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->all_ones(i), target);
  }

  // repeated bool our_true_eye = 12;
  if (this->our_true_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_true_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_true_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_true_eye(i), target);
  }

  // repeated bool our_fake_eye = 13;
  if (this->our_fake_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_fake_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_fake_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_fake_eye(i), target);
  }

  // repeated bool our_semi_eye = 14;
  if (this->our_semi_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_semi_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_semi_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_semi_eye(i), target);
  }

  // repeated bool oppo_true_eye = 15;
  if (this->oppo_true_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_true_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_true_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_true_eye(i), target);
  }

  // repeated bool oppo_fake_eye = 16;
  if (this->oppo_fake_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_fake_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_fake_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_fake_eye(i), target);
  }

  // repeated bool oppo_semi_eye = 17;
  if (this->oppo_semi_eye_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_semi_eye_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_semi_eye_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_semi_eye(i), target);
  }

  // repeated bool all_zeros = 18;
  if (this->all_zeros_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _all_zeros_cached_byte_size_, target);
  }
  for (int i = 0; i < this->all_zeros_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->all_zeros(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.RequestV2)
  return target;
}

int RequestV2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.RequestV2)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated bool board_state = 2;
  {
    int data_size = 0;
    data_size = 1 * this->board_state_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _board_state_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib1 = 3;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib2 = 4;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib3 = 5;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib3_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib3_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib4_plus = 6;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib4_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib4_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib1 = 7;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib2 = 8;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib3 = 9;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib3_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib3_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib4_plus = 10;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib4_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib4_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool all_ones = 11;
  {
    int data_size = 0;
    data_size = 1 * this->all_ones_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _all_ones_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_true_eye = 12;
  {
    int data_size = 0;
    data_size = 1 * this->our_true_eye_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_true_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_fake_eye = 13;
  {
    int data_size = 0;
    data_size = 1 * this->our_fake_eye_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_fake_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_semi_eye = 14;
  {
    int data_size = 0;
    data_size = 1 * this->our_semi_eye_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_semi_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_true_eye = 15;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_true_eye_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_true_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_fake_eye = 16;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_fake_eye_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_fake_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_semi_eye = 17;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_semi_eye_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_semi_eye_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool all_zeros = 18;
  {
    int data_size = 0;
    data_size = 1 * this->all_zeros_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _all_zeros_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestV2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.RequestV2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RequestV2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestV2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.RequestV2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.RequestV2)
    MergeFrom(*source);
  }
}

void RequestV2::MergeFrom(const RequestV2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.RequestV2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  board_state_.MergeFrom(from.board_state_);
  our_group_lib1_.MergeFrom(from.our_group_lib1_);
  our_group_lib2_.MergeFrom(from.our_group_lib2_);
  our_group_lib3_.MergeFrom(from.our_group_lib3_);
  our_group_lib4_plus_.MergeFrom(from.our_group_lib4_plus_);
  oppo_group_lib1_.MergeFrom(from.oppo_group_lib1_);
  oppo_group_lib2_.MergeFrom(from.oppo_group_lib2_);
  oppo_group_lib3_.MergeFrom(from.oppo_group_lib3_);
  oppo_group_lib4_plus_.MergeFrom(from.oppo_group_lib4_plus_);
  all_ones_.MergeFrom(from.all_ones_);
  our_true_eye_.MergeFrom(from.our_true_eye_);
  our_fake_eye_.MergeFrom(from.our_fake_eye_);
  our_semi_eye_.MergeFrom(from.our_semi_eye_);
  oppo_true_eye_.MergeFrom(from.oppo_true_eye_);
  oppo_fake_eye_.MergeFrom(from.oppo_fake_eye_);
  oppo_semi_eye_.MergeFrom(from.oppo_semi_eye_);
  all_zeros_.MergeFrom(from.all_zeros_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void RequestV2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.RequestV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestV2::CopyFrom(const RequestV2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.RequestV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestV2::IsInitialized() const {

  return true;
}

void RequestV2::Swap(RequestV2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestV2::InternalSwap(RequestV2* other) {
  std::swap(board_size_, other->board_size_);
  board_state_.UnsafeArenaSwap(&other->board_state_);
  our_group_lib1_.UnsafeArenaSwap(&other->our_group_lib1_);
  our_group_lib2_.UnsafeArenaSwap(&other->our_group_lib2_);
  our_group_lib3_.UnsafeArenaSwap(&other->our_group_lib3_);
  our_group_lib4_plus_.UnsafeArenaSwap(&other->our_group_lib4_plus_);
  oppo_group_lib1_.UnsafeArenaSwap(&other->oppo_group_lib1_);
  oppo_group_lib2_.UnsafeArenaSwap(&other->oppo_group_lib2_);
  oppo_group_lib3_.UnsafeArenaSwap(&other->oppo_group_lib3_);
  oppo_group_lib4_plus_.UnsafeArenaSwap(&other->oppo_group_lib4_plus_);
  all_ones_.UnsafeArenaSwap(&other->all_ones_);
  our_true_eye_.UnsafeArenaSwap(&other->our_true_eye_);
  our_fake_eye_.UnsafeArenaSwap(&other->our_fake_eye_);
  our_semi_eye_.UnsafeArenaSwap(&other->our_semi_eye_);
  oppo_true_eye_.UnsafeArenaSwap(&other->oppo_true_eye_);
  oppo_fake_eye_.UnsafeArenaSwap(&other->oppo_fake_eye_);
  oppo_semi_eye_.UnsafeArenaSwap(&other->oppo_semi_eye_);
  all_zeros_.UnsafeArenaSwap(&other->all_zeros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestV2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestV2_descriptor_;
  metadata.reflection = RequestV2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestV2

// optional int32 board_size = 1;
void RequestV2::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 RequestV2::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.board_size)
  return board_size_;
}
 void RequestV2::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.board_size)
}

// repeated bool board_state = 2;
int RequestV2::board_state_size() const {
  return board_state_.size();
}
void RequestV2::clear_board_state() {
  board_state_.Clear();
}
 bool RequestV2::board_state(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.board_state)
  return board_state_.Get(index);
}
 void RequestV2::set_board_state(int index, bool value) {
  board_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.board_state)
}
 void RequestV2::add_board_state(bool value) {
  board_state_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.board_state)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::board_state() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.board_state)
  return board_state_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_board_state() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.board_state)
  return &board_state_;
}

// repeated bool our_group_lib1 = 3;
int RequestV2::our_group_lib1_size() const {
  return our_group_lib1_.size();
}
void RequestV2::clear_our_group_lib1() {
  our_group_lib1_.Clear();
}
 bool RequestV2::our_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_group_lib1)
  return our_group_lib1_.Get(index);
}
 void RequestV2::set_our_group_lib1(int index, bool value) {
  our_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_group_lib1)
}
 void RequestV2::add_our_group_lib1(bool value) {
  our_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_group_lib1)
  return our_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_group_lib1)
  return &our_group_lib1_;
}

// repeated bool our_group_lib2 = 4;
int RequestV2::our_group_lib2_size() const {
  return our_group_lib2_.size();
}
void RequestV2::clear_our_group_lib2() {
  our_group_lib2_.Clear();
}
 bool RequestV2::our_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_group_lib2)
  return our_group_lib2_.Get(index);
}
 void RequestV2::set_our_group_lib2(int index, bool value) {
  our_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_group_lib2)
}
 void RequestV2::add_our_group_lib2(bool value) {
  our_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_group_lib2)
  return our_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_group_lib2)
  return &our_group_lib2_;
}

// repeated bool our_group_lib3 = 5;
int RequestV2::our_group_lib3_size() const {
  return our_group_lib3_.size();
}
void RequestV2::clear_our_group_lib3() {
  our_group_lib3_.Clear();
}
 bool RequestV2::our_group_lib3(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_group_lib3)
  return our_group_lib3_.Get(index);
}
 void RequestV2::set_our_group_lib3(int index, bool value) {
  our_group_lib3_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_group_lib3)
}
 void RequestV2::add_our_group_lib3(bool value) {
  our_group_lib3_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_group_lib3)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_group_lib3() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_group_lib3)
  return our_group_lib3_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_group_lib3() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_group_lib3)
  return &our_group_lib3_;
}

// repeated bool our_group_lib4_plus = 6;
int RequestV2::our_group_lib4_plus_size() const {
  return our_group_lib4_plus_.size();
}
void RequestV2::clear_our_group_lib4_plus() {
  our_group_lib4_plus_.Clear();
}
 bool RequestV2::our_group_lib4_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_group_lib4_plus)
  return our_group_lib4_plus_.Get(index);
}
 void RequestV2::set_our_group_lib4_plus(int index, bool value) {
  our_group_lib4_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_group_lib4_plus)
}
 void RequestV2::add_our_group_lib4_plus(bool value) {
  our_group_lib4_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_group_lib4_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_group_lib4_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_group_lib4_plus)
  return our_group_lib4_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_group_lib4_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_group_lib4_plus)
  return &our_group_lib4_plus_;
}

// repeated bool oppo_group_lib1 = 7;
int RequestV2::oppo_group_lib1_size() const {
  return oppo_group_lib1_.size();
}
void RequestV2::clear_oppo_group_lib1() {
  oppo_group_lib1_.Clear();
}
 bool RequestV2::oppo_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_group_lib1)
  return oppo_group_lib1_.Get(index);
}
 void RequestV2::set_oppo_group_lib1(int index, bool value) {
  oppo_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_group_lib1)
}
 void RequestV2::add_oppo_group_lib1(bool value) {
  oppo_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_group_lib1)
  return oppo_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_group_lib1)
  return &oppo_group_lib1_;
}

// repeated bool oppo_group_lib2 = 8;
int RequestV2::oppo_group_lib2_size() const {
  return oppo_group_lib2_.size();
}
void RequestV2::clear_oppo_group_lib2() {
  oppo_group_lib2_.Clear();
}
 bool RequestV2::oppo_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_group_lib2)
  return oppo_group_lib2_.Get(index);
}
 void RequestV2::set_oppo_group_lib2(int index, bool value) {
  oppo_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_group_lib2)
}
 void RequestV2::add_oppo_group_lib2(bool value) {
  oppo_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_group_lib2)
  return oppo_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_group_lib2)
  return &oppo_group_lib2_;
}

// repeated bool oppo_group_lib3 = 9;
int RequestV2::oppo_group_lib3_size() const {
  return oppo_group_lib3_.size();
}
void RequestV2::clear_oppo_group_lib3() {
  oppo_group_lib3_.Clear();
}
 bool RequestV2::oppo_group_lib3(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_group_lib3)
  return oppo_group_lib3_.Get(index);
}
 void RequestV2::set_oppo_group_lib3(int index, bool value) {
  oppo_group_lib3_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_group_lib3)
}
 void RequestV2::add_oppo_group_lib3(bool value) {
  oppo_group_lib3_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_group_lib3)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_group_lib3() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_group_lib3)
  return oppo_group_lib3_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_group_lib3() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_group_lib3)
  return &oppo_group_lib3_;
}

// repeated bool oppo_group_lib4_plus = 10;
int RequestV2::oppo_group_lib4_plus_size() const {
  return oppo_group_lib4_plus_.size();
}
void RequestV2::clear_oppo_group_lib4_plus() {
  oppo_group_lib4_plus_.Clear();
}
 bool RequestV2::oppo_group_lib4_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_group_lib4_plus)
  return oppo_group_lib4_plus_.Get(index);
}
 void RequestV2::set_oppo_group_lib4_plus(int index, bool value) {
  oppo_group_lib4_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_group_lib4_plus)
}
 void RequestV2::add_oppo_group_lib4_plus(bool value) {
  oppo_group_lib4_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_group_lib4_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_group_lib4_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_group_lib4_plus)
  return oppo_group_lib4_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_group_lib4_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_group_lib4_plus)
  return &oppo_group_lib4_plus_;
}

// repeated bool all_ones = 11;
int RequestV2::all_ones_size() const {
  return all_ones_.size();
}
void RequestV2::clear_all_ones() {
  all_ones_.Clear();
}
 bool RequestV2::all_ones(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.all_ones)
  return all_ones_.Get(index);
}
 void RequestV2::set_all_ones(int index, bool value) {
  all_ones_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.all_ones)
}
 void RequestV2::add_all_ones(bool value) {
  all_ones_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.all_ones)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::all_ones() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.all_ones)
  return all_ones_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_all_ones() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.all_ones)
  return &all_ones_;
}

// repeated bool our_true_eye = 12;
int RequestV2::our_true_eye_size() const {
  return our_true_eye_.size();
}
void RequestV2::clear_our_true_eye() {
  our_true_eye_.Clear();
}
 bool RequestV2::our_true_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_true_eye)
  return our_true_eye_.Get(index);
}
 void RequestV2::set_our_true_eye(int index, bool value) {
  our_true_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_true_eye)
}
 void RequestV2::add_our_true_eye(bool value) {
  our_true_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_true_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_true_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_true_eye)
  return our_true_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_true_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_true_eye)
  return &our_true_eye_;
}

// repeated bool our_fake_eye = 13;
int RequestV2::our_fake_eye_size() const {
  return our_fake_eye_.size();
}
void RequestV2::clear_our_fake_eye() {
  our_fake_eye_.Clear();
}
 bool RequestV2::our_fake_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_fake_eye)
  return our_fake_eye_.Get(index);
}
 void RequestV2::set_our_fake_eye(int index, bool value) {
  our_fake_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_fake_eye)
}
 void RequestV2::add_our_fake_eye(bool value) {
  our_fake_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_fake_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_fake_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_fake_eye)
  return our_fake_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_fake_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_fake_eye)
  return &our_fake_eye_;
}

// repeated bool our_semi_eye = 14;
int RequestV2::our_semi_eye_size() const {
  return our_semi_eye_.size();
}
void RequestV2::clear_our_semi_eye() {
  our_semi_eye_.Clear();
}
 bool RequestV2::our_semi_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.our_semi_eye)
  return our_semi_eye_.Get(index);
}
 void RequestV2::set_our_semi_eye(int index, bool value) {
  our_semi_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.our_semi_eye)
}
 void RequestV2::add_our_semi_eye(bool value) {
  our_semi_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.our_semi_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::our_semi_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.our_semi_eye)
  return our_semi_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_our_semi_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.our_semi_eye)
  return &our_semi_eye_;
}

// repeated bool oppo_true_eye = 15;
int RequestV2::oppo_true_eye_size() const {
  return oppo_true_eye_.size();
}
void RequestV2::clear_oppo_true_eye() {
  oppo_true_eye_.Clear();
}
 bool RequestV2::oppo_true_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_true_eye)
  return oppo_true_eye_.Get(index);
}
 void RequestV2::set_oppo_true_eye(int index, bool value) {
  oppo_true_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_true_eye)
}
 void RequestV2::add_oppo_true_eye(bool value) {
  oppo_true_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_true_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_true_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_true_eye)
  return oppo_true_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_true_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_true_eye)
  return &oppo_true_eye_;
}

// repeated bool oppo_fake_eye = 16;
int RequestV2::oppo_fake_eye_size() const {
  return oppo_fake_eye_.size();
}
void RequestV2::clear_oppo_fake_eye() {
  oppo_fake_eye_.Clear();
}
 bool RequestV2::oppo_fake_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_fake_eye)
  return oppo_fake_eye_.Get(index);
}
 void RequestV2::set_oppo_fake_eye(int index, bool value) {
  oppo_fake_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_fake_eye)
}
 void RequestV2::add_oppo_fake_eye(bool value) {
  oppo_fake_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_fake_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_fake_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_fake_eye)
  return oppo_fake_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_fake_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_fake_eye)
  return &oppo_fake_eye_;
}

// repeated bool oppo_semi_eye = 17;
int RequestV2::oppo_semi_eye_size() const {
  return oppo_semi_eye_.size();
}
void RequestV2::clear_oppo_semi_eye() {
  oppo_semi_eye_.Clear();
}
 bool RequestV2::oppo_semi_eye(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.oppo_semi_eye)
  return oppo_semi_eye_.Get(index);
}
 void RequestV2::set_oppo_semi_eye(int index, bool value) {
  oppo_semi_eye_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.oppo_semi_eye)
}
 void RequestV2::add_oppo_semi_eye(bool value) {
  oppo_semi_eye_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.oppo_semi_eye)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::oppo_semi_eye() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.oppo_semi_eye)
  return oppo_semi_eye_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_oppo_semi_eye() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.oppo_semi_eye)
  return &oppo_semi_eye_;
}

// repeated bool all_zeros = 18;
int RequestV2::all_zeros_size() const {
  return all_zeros_.size();
}
void RequestV2::clear_all_zeros() {
  all_zeros_.Clear();
}
 bool RequestV2::all_zeros(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV2.all_zeros)
  return all_zeros_.Get(index);
}
 void RequestV2::set_all_zeros(int index, bool value) {
  all_zeros_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV2.all_zeros)
}
 void RequestV2::add_all_zeros(bool value) {
  all_zeros_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV2.all_zeros)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV2::all_zeros() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV2.all_zeros)
  return all_zeros_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV2::mutable_all_zeros() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV2.all_zeros)
  return &all_zeros_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseV2::kBoardSizeFieldNumber;
const int ResponseV2::kPossibilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseV2::ResponseV2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.ResponseV2)
}

void ResponseV2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResponseV2::ResponseV2(const ResponseV2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.ResponseV2)
}

void ResponseV2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

ResponseV2::~ResponseV2() {
  // @@protoc_insertion_point(destructor:gocnn.ResponseV2)
  SharedDtor();
}

void ResponseV2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseV2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseV2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseV2_descriptor_;
}

const ResponseV2& ResponseV2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

ResponseV2* ResponseV2::default_instance_ = NULL;

ResponseV2* ResponseV2::New(::google::protobuf::Arena* arena) const {
  ResponseV2* n = new ResponseV2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseV2::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.ResponseV2)
  board_size_ = 0;
  possibility_.Clear();
}

bool ResponseV2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.ResponseV2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_possibility;
        break;
      }

      // repeated float possibility = 2;
      case 2: {
        if (tag == 18) {
         parse_possibility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_possibility())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_possibility())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.ResponseV2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.ResponseV2)
  return false;
#undef DO_
}

void ResponseV2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.ResponseV2)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_possibility_cached_byte_size_);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->possibility(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.ResponseV2)
}

::google::protobuf::uint8* ResponseV2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.ResponseV2)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _possibility_cached_byte_size_, target);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->possibility(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.ResponseV2)
  return target;
}

int ResponseV2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.ResponseV2)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated float possibility = 2;
  {
    int data_size = 0;
    data_size = 4 * this->possibility_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _possibility_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseV2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.ResponseV2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseV2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseV2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.ResponseV2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.ResponseV2)
    MergeFrom(*source);
  }
}

void ResponseV2::MergeFrom(const ResponseV2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.ResponseV2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  possibility_.MergeFrom(from.possibility_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void ResponseV2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.ResponseV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseV2::CopyFrom(const ResponseV2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.ResponseV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseV2::IsInitialized() const {

  return true;
}

void ResponseV2::Swap(ResponseV2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseV2::InternalSwap(ResponseV2* other) {
  std::swap(board_size_, other->board_size_);
  possibility_.UnsafeArenaSwap(&other->possibility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseV2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseV2_descriptor_;
  metadata.reflection = ResponseV2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseV2

// optional int32 board_size = 1;
void ResponseV2::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 ResponseV2::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV2.board_size)
  return board_size_;
}
 void ResponseV2::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.ResponseV2.board_size)
}

// repeated float possibility = 2;
int ResponseV2::possibility_size() const {
  return possibility_.size();
}
void ResponseV2::clear_possibility() {
  possibility_.Clear();
}
 float ResponseV2::possibility(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV2.possibility)
  return possibility_.Get(index);
}
 void ResponseV2::set_possibility(int index, float value) {
  possibility_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.ResponseV2.possibility)
}
 void ResponseV2::add_possibility(float value) {
  possibility_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.ResponseV2.possibility)
}
 const ::google::protobuf::RepeatedField< float >&
ResponseV2::possibility() const {
  // @@protoc_insertion_point(field_list:gocnn.ResponseV2.possibility)
  return possibility_;
}
 ::google::protobuf::RepeatedField< float >*
ResponseV2::mutable_possibility() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.ResponseV2.possibility)
  return &possibility_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gocnn

// @@protoc_insertion_point(global_scope)
